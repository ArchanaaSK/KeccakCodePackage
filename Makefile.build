<?xml version="1.0"?>
<!--
Implementation by the Keccak, Keyak and Ketje Teams, namely, Guido Bertoni,
Joan Daemen, MichaÃ«l Peeters, Gilles Van Assche and Ronny Van Keer, hereby
denoted as "the implementer".

For more information, feedback or questions, please refer to our websites:
http://keccak.noekeon.org/
http://keyak.noekeon.org/
http://ketje.noekeon.org/

To the extent possible under law, the implementer has waived all copyright
and related or neighboring rights to the source code in this file.
http://creativecommons.org/publicdomain/zero/1.0/
-->
<build all="all" xmlns:xi="http://www.w3.org/2001/XInclude">

    <xi:include href="Ketje/Ketje.build"/>

    <!-- For the name of the targets, please see the end of this file. -->

    <!-- *** Low-level services *** -->

    <fragment name="common">
        <h>./KeccakCodePackage.h</h>
        <h>Common/align.h</h>
        <h>Common/brg_endian.h</h>
    </fragment>

    <fragment name="optimized">
        <h>Common/brg_endian.h</h>
        <gcc>-fomit-frame-pointer</gcc>
        <gcc>-O2</gcc>
        <gcc>-g0</gcc>
        <gcc>-march=native</gcc>
        <gcc>-mtune=native</gcc>
    </fragment>

    <!-- Keccak-p[200] -->

    <fragment name="width200">
    </fragment>

    <fragment name="reference200" inherits="common width200">
        <c>SnP/KeccakP-200/Reference/KeccakP-200-reference.c</c>
        <h>SnP/KeccakP-200/Reference/KeccakP-200-reference.h</h>
        <h>SnP/KeccakP-200/Reference/KeccakP-200-SnP.h</h>
    </fragment>

    <fragment name="compact200" inherits="common optimized width200">
        <c>SnP/KeccakP-200/Compact/KeccakP-200-compact.c</c>
        <h>SnP/KeccakP-200/Compact/KeccakP-200-SnP.h</h>
    </fragment>

    <fragment name="optimized200ARMv6M" inherits="common optimized width200">
        <c>SnP/KeccakP-200/OptimizedAsmARM/KeccakP-200-armv6m-le-gcc.s</c>
        <h>SnP/KeccakP-200/OptimizedAsmARM/KeccakP-200-SnP.h</h>
    </fragment>

    <fragment name="optimized200ARMv7M" inherits="common optimized width200">
        <c>SnP/KeccakP-200/OptimizedAsmARM/KeccakP-200-armv7m-le-gcc.s</c>
        <h>SnP/KeccakP-200/OptimizedAsmARM/KeccakP-200-SnP.h</h>
    </fragment>

    <fragment name="optimized200AVR8" inherits="common optimized width200">
        <c>SnP/KeccakP-200/OptimizedAsmAVR8/KeccakP-200-avr8-fast.s</c>
        <h>SnP/KeccakP-200/OptimizedAsmAVR8/KeccakP-200-SnP.h</h>
    </fragment>

    <!-- Keccak-p[400] -->

    <fragment name="width400">
    </fragment>

    <fragment name="reference400" inherits="common width400">
        <c>SnP/KeccakP-400/Reference/KeccakP-400-reference.c</c>
        <h>SnP/KeccakP-400/Reference/KeccakP-400-reference.h</h>
        <h>SnP/KeccakP-400/Reference/KeccakP-400-SnP.h</h>
    </fragment>

    <fragment name="optimized400ARMv6M" inherits="common optimized width400">
        <c>SnP/KeccakP-400/OptimizedAsmARM/KeccakP-400-armv6m-le-gcc.s</c>
        <h>SnP/KeccakP-400/OptimizedAsmARM/KeccakP-400-SnP.h</h>
    </fragment>

    <fragment name="optimized400ARMv7M" inherits="common optimized width400">
        <c>SnP/KeccakP-400/OptimizedAsmARM/KeccakP-400-armv7m-le-gcc.s</c>
        <h>SnP/KeccakP-400/OptimizedAsmARM/KeccakP-400-SnP.h</h>
    </fragment>

    <fragment name="optimized400AVR8" inherits="common optimized width400">
        <c>SnP/KeccakP-400/OptimizedAsmAVR8/KeccakP-400-avr8-fast.s</c>
        <h>SnP/KeccakP-400/OptimizedAsmAVR8/KeccakP-400-SnP.h</h>
    </fragment>

    <!-- Keccak-p[800] -->

    <fragment name="width800">
    </fragment>

    <fragment name="reference800" inherits="common width800">
        <c>SnP/KeccakP-800/Reference/KeccakP-800-reference.c</c>
        <h>SnP/KeccakP-800/Reference/KeccakP-800-reference.h</h>
        <h>SnP/KeccakP-800/Reference/KeccakP-800-SnP.h</h>
    </fragment>

    <fragment name="compact800" inherits="common optimized width800">
        <c>SnP/KeccakP-800/Compact/KeccakP-800-compact.c</c>
        <h>SnP/KeccakP-800/Compact/KeccakP-800-SnP.h</h>
    </fragment>

    <fragment name="optimized800" inherits="width800 optimized">
        <h>SnP/KeccakP-800/Optimized32/KeccakP-800-SnP.h</h>
        <h>SnP/KeccakP-800/Optimized32/KeccakP-800-opt32-bis.macros</h>
        <c>SnP/KeccakP-800/Optimized32/KeccakP-800-opt32.c</c>
        <h>SnP/KeccakP-800/Optimized32/KeccakP-800-opt32.macros</h>
        <h>SnP/KeccakP-800/Optimized32/KeccakP-800-unrolling-bis.macros</h>
        <h>SnP/KeccakP-800/Optimized32/KeccakP-800-unrolling.macros</h>
    </fragment>

    <fragment name="optimized800u2" inherits="optimized800">
        <h>SnP/KeccakP-800/Optimized32/u2/KeccakP-800-opt32-config.h</h>
    </fragment>

    <fragment name="optimized800ufull" inherits="optimized800">
        <h>SnP/KeccakP-800/Optimized32/ufull/KeccakP-800-opt32-config.h</h>
    </fragment>

    <fragment name="optimized800lcu2" inherits="optimized800">
        <h>SnP/KeccakP-800/Optimized32/LCu2/KeccakP-800-opt32-config.h</h>
    </fragment>

    <fragment name="optimized800lcufull" inherits="optimized800">
        <h>SnP/KeccakP-800/Optimized32/LCufull/KeccakP-800-opt32-config.h</h>
    </fragment>

    <fragment name="optimized800ARM" inherits="common optimized width800">
        <h>SnP/KeccakP-800/OptimizedAsmARM/KeccakP-800-SnP.h</h>
    </fragment>

    <fragment name="optimized800ARMv6Mu1" inherits="optimized800ARM">
        <c>SnP/KeccakP-800/OptimizedAsmARM/KeccakP-800-u1-armv6m-le-gcc.s</c>
    </fragment>

    <fragment name="optimized800ARMv6Mu2" inherits="optimized800ARM">
        <c>SnP/KeccakP-800/OptimizedAsmARM/KeccakP-800-u2-armv6m-le-gcc.s</c>
    </fragment>

    <fragment name="optimized800ARMv7Mu2" inherits="optimized800ARM">
        <c>SnP/KeccakP-800/OptimizedAsmARM/KeccakP-800-u2-armv7m-le-gcc.s</c>
    </fragment>

    <fragment name="optimized800ARMv7Mufull" inherits="optimized800ARM">
        <c>SnP/KeccakP-800/OptimizedAsmARM/KeccakP-800-uf-armv7m-le-gcc.s</c>
    </fragment>

    <fragment name="optimized800ARMv7Au2" inherits="optimized800ARM">
        <c>SnP/KeccakP-800/OptimizedAsmARM/KeccakP-800-u2-armv7a-le-gcc.s</c>
    </fragment>

    <fragment name="optimized800ARMv8A" inherits="common optimized width800">
      <c>SnP/KeccakP-800/Optimized64AsmARM/KeccakP-800-armv8a-neon.s</c>
      <h>SnP/KeccakP-800/Optimized64AsmARM/KeccakP-800-SnP.h</h>
    </fragment>

    <fragment name="optimized800AVR8" inherits="common optimized width800">
        <c>SnP/KeccakP-800/OptimizedAsmAVR8/KeccakP-800-avr8-fast.s</c>
        <h>SnP/KeccakP-800/OptimizedAsmAVR8/KeccakP-800-SnP.h</h>
    </fragment>

    <!-- Keccak-p[1600] -->

    <fragment name="width1600">
    </fragment>

    <fragment name="reference1600" inherits="common width1600">
        <c>SnP/KeccakP-1600/Reference/KeccakP-1600-reference.c</c>
        <h>SnP/KeccakP-1600/Reference/KeccakP-1600-reference.h</h>
        <h>SnP/KeccakP-1600/Reference/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="reference1600-32bits" inherits="common width1600">
        <c>SnP/KeccakP-1600/Reference32BI/KeccakP-1600-reference32BI.c</c>
        <h>SnP/KeccakP-1600/Reference32BI/KeccakP-1600-reference.h</h>
        <h>SnP/KeccakP-1600/Reference32BI/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="compact1600" inherits="common optimized width1600">
        <c>SnP/KeccakP-1600/Compact64/KeccakP-1600-compact64.c</c>
        <h>SnP/KeccakP-1600/Compact64/KeccakP-1600-SnP.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <fragment name="compact1600AVR8" inherits="common optimized width1600">
        <c>SnP/KeccakP-1600/OptimizedAsmAVR8/KeccakP-1600-avr8-compact.s</c>
        <h>SnP/KeccakP-1600/OptimizedAsmAVR8/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="inplace1600bi" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/Inplace32BI/KeccakP-1600-inplace32BI.c</c>
        <h>SnP/KeccakP-1600/Inplace32BI/KeccakP-1600-SnP.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <fragment name="inplace1600ARM" inherits="width1600 optimized">
        <h>SnP/KeccakP-1600/Optimized32biAsmARM/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="inplace1600ARMv6M" inherits="inplace1600ARM">
        <c>SnP/KeccakP-1600/Optimized32biAsmARM/KeccakP-1600-inplace-32bi-armv6m-le-gcc.s</c>
    </fragment>

    <fragment name="inplace1600ARMv7M" inherits="inplace1600ARM">
        <c>SnP/KeccakP-1600/Optimized32biAsmARM/KeccakP-1600-inplace-32bi-armv7m-le-gcc.s</c>
    </fragment>

    <fragment name="inplace1600ARMv7A" inherits="inplace1600ARM">
        <c>SnP/KeccakP-1600/Optimized32biAsmARM/KeccakP-1600-inplace-32bi-armv7a-le-gcc.s</c>
    </fragment>

    <fragment name="optimized1600" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/Optimized64/KeccakP-1600-opt64.c</c>
        <h>SnP/KeccakP-1600/Optimized/KeccakP-1600-unrolling.macros</h>
        <h>SnP/KeccakP-1600/Optimized/KeccakP-1600-64.macros</h>
        <h>SnP/KeccakP-1600/Optimized64/KeccakP-1600-SnP.h</h>
        <h>SnP/SnP-Relaned.h</h>
        <gcc>-m64</gcc>
    </fragment>

    <fragment name="optimized1600u6" inherits="optimized1600">
        <h>SnP/KeccakP-1600/Optimized64/u6/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="optimized1600ufull" inherits="optimized1600">
        <h>SnP/KeccakP-1600/Optimized64/ufull/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="optimized1600lcu6" inherits="optimized1600">
        <h>SnP/KeccakP-1600/Optimized64/LCu6/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="optimized1600lcufull" inherits="optimized1600">
        <h>SnP/KeccakP-1600/Optimized64/LCufull/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="optimized1600lcufullshld" inherits="optimized1600">
        <h>SnP/KeccakP-1600/Optimized64/LCufullshld/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="optimized1600AsmX86-64" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/OptimizedAsmX86-64/KeccakP-1600-x86-64-gas.s</c>
        <h>SnP/KeccakP-1600/OptimizedAsmX86-64/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="optimized1600AsmX86-64shld" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/OptimizedAsmX86-64/KeccakP-1600-x86-64-shld-gas.s</c>
        <h>SnP/KeccakP-1600/OptimizedAsmX86-64/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="optimized1600AsmX86-64Apple" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/OptimizedAsmX86-64/KeccakP-1600-x86-64-gas_Apple.s</c>
        <h>SnP/KeccakP-1600/OptimizedAsmX86-64/KeccakP-1600-SnP.h</h>
    </fragment>

<!-- Not yet updated with Permute_Nrounds
    <fragment name="optimized1600Haswell" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/Optimized64/CompiledByGCC474forHaswell/KeccakP-1600-opt64.s</c>
        <h>SnP/KeccakP-1600/Optimized64/CompiledByGCC474forHaswell/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="optimized1600SandyBridge" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/Optimized64/CompiledByGCC474forSandyBridge/KeccakP-1600-opt64.s</c>
        <h>SnP/KeccakP-1600/Optimized64/CompiledByGCC474forSandyBridge/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="optimized1600Nehalem" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/Optimized64/CompiledByGCC474forNehalem/KeccakP-1600-opt64.s</c>
        <h>SnP/KeccakP-1600/Optimized64/CompiledByGCC474forNehalem/KeccakP-1600-SnP.h</h>
    </fragment>
-->

    <fragment name="optimized1600AVX2" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/OptimizedAVX2/KeccakP-1600-AVX2.cpp</c>
        <h>SnP/KeccakP-1600/OptimizedAVX2/KeccakP-1600-AVX2.h</h>
        <h>SnP/KeccakP-1600/OptimizedAVX2/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="optimized1600AVX512" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/OptimizedAVX512/KeccakP-1600-AVX512.c</c>
        <h>SnP/KeccakP-1600/OptimizedAVX512/AVX512u12/KeccakP-1600-AVX512-config.h</h>
        <h>SnP/KeccakP-1600/OptimizedAVX512/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="optimized1600XOP" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/OptimizedXOP/KeccakP-1600-XOP.c</c>
        <h>SnP/KeccakP-1600/OptimizedXOP/KeccakP-1600-SnP.h</h>
        <h>SnP/KeccakP-1600/Optimized/KeccakP-1600-unrolling.macros</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <fragment name="optimized1600XOPu6" inherits="optimized1600XOP">
        <h>SnP/KeccakP-1600/OptimizedXOP/u6/KeccakP-1600-XOP-config.h</h>
    </fragment>

    <fragment name="optimized1600XOPufull" inherits="optimized1600XOP">
        <h>SnP/KeccakP-1600/OptimizedXOP/ufull/KeccakP-1600-XOP-config.h</h>
    </fragment>

    <fragment name="optimized1600ARM" inherits="width1600 optimized">
        <h>SnP/KeccakP-1600/Optimized32biAsmARM/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="optimized1600ARMv6Mu1" inherits="optimized1600ARM">
        <c>SnP/KeccakP-1600/Optimized32biAsmARM/KeccakP-1600-u1-32bi-armv6m-le-gcc.s</c>
    </fragment>

    <fragment name="optimized1600ARMv6Mu2" inherits="optimized1600ARM">
        <c>SnP/KeccakP-1600/Optimized32biAsmARM/KeccakP-1600-u2-32bi-armv6m-le-gcc.s</c>
    </fragment>

    <fragment name="optimized1600ARMv7A" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/OptimizedAsmARM/KeccakP-1600-armv7a-le-neon-gcc.s</c>
        <h>SnP/KeccakP-1600/OptimizedAsmARM/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="optimized1600ARMv8A" inherits="width1600 optimized">
        <c>SnP/KeccakP-1600/Optimized64AsmARM/KeccakP-1600-armv8a-neon.s</c>
        <h>SnP/KeccakP-1600/Optimized64AsmARM/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="optimized1600AVR8" inherits="common optimized width1600">
        <c>SnP/KeccakP-1600/OptimizedAsmAVR8/KeccakP-1600-avr8-fast.s</c>
        <h>SnP/KeccakP-1600/OptimizedAsmAVR8/KeccakP-1600-SnP.h</h>
    </fragment>

    <!-- Keccak-p[800]Ã2 -->

    <fragment name="800times2on1">
        <c>PlSnP/KeccakP-800-times2/FallbackOn1/KeccakP-800-times2-on1.c</c>
        <h>PlSnP/KeccakP-800-times2/FallbackOn1/KeccakP-800-times2-SnP.h</h>
        <h>PlSnP/Fallback/PlSnP-Fallback.inc</h>
    </fragment>

    <!-- Keccak-p[800]Ã4 -->

    <fragment name="800times4on1">
        <c>PlSnP/KeccakP-800-times4/FallbackOn1/KeccakP-800-times4-on1.c</c>
        <h>PlSnP/KeccakP-800-times4/FallbackOn1/KeccakP-800-times4-SnP.h</h>
        <h>PlSnP/Fallback/PlSnP-Fallback.inc</h>
    </fragment>

    <fragment name="800times4ARMv7A" inherits="800times4on1"/>

    <!-- Keccak-p[800]Ã8 -->

    <fragment name="800times8on1">
        <c>PlSnP/KeccakP-800-times8/FallbackOn1/KeccakP-800-times8-on1.c</c>
        <h>PlSnP/KeccakP-800-times8/FallbackOn1/KeccakP-800-times8-SnP.h</h>
        <h>PlSnP/Fallback/PlSnP-Fallback.inc</h>
    </fragment>

    <!-- Keccak-p[1600]Ã2 -->

    <fragment name="1600times2on1">
        <c>PlSnP/KeccakP-1600-times2/FallbackOn1/KeccakP-1600-times2-on1.c</c>
        <h>PlSnP/KeccakP-1600-times2/FallbackOn1/KeccakP-1600-times2-SnP.h</h>
        <h>PlSnP/Fallback/PlSnP-Fallback.inc</h>
    </fragment>

    <fragment name="SIMD128">
        <c>PlSnP/KeccakP-1600-times2/SIMD128/KeccakP-1600-times2-SIMD128.c</c>
        <h>PlSnP/KeccakP-1600-times2/SIMD128/KeccakP-1600-times2-SnP.h</h>
        <h>SnP/KeccakP-1600/Optimized/KeccakP-1600-unrolling.macros</h>
    </fragment>

    <fragment name="SIMD128-SSE2u2" inherits="SIMD128">
        <h>PlSnP/KeccakP-1600-times2/SIMD128/SSE2u2/SIMD128-config.h</h>
    </fragment>

    <fragment name="SIMD128-SSE2ufull" inherits="SIMD128">
        <h>PlSnP/KeccakP-1600-times2/SIMD128/SSE2ufull/SIMD128-config.h</h>
    </fragment>

    <fragment name="SIMD128-XOPu2" inherits="SIMD128">
        <h>PlSnP/KeccakP-1600-times2/SIMD128/XOPu2/SIMD128-config.h</h>
    </fragment>

    <fragment name="SIMD128-XOPufull" inherits="SIMD128">
        <h>PlSnP/KeccakP-1600-times2/SIMD128/XOPufull/SIMD128-config.h</h>
    </fragment>

    <fragment name="SIMD512-2">
        <c>PlSnP/KeccakP-1600-times2/SIMD512/KeccakP-1600-times2-SIMD512.c</c>
        <h>PlSnP/KeccakP-1600-times2/SIMD512/KeccakP-1600-times2-SnP.h</h>
    </fragment>

    <fragment name="SIMD512-2-AVX512u4" inherits="SIMD512-2">
        <h>PlSnP/KeccakP-1600-times2/SIMD512/AVX512u4/SIMD512-2-config.h</h>
    </fragment>

    <fragment name="SIMD512-2-AVX512u12" inherits="SIMD512-2">
        <h>PlSnP/KeccakP-1600-times2/SIMD512/AVX512u12/SIMD512-2-config.h</h>
    </fragment>

    <fragment name="SIMD512-2-AVX512ufull" inherits="SIMD512-2">
        <h>PlSnP/KeccakP-1600-times2/SIMD512/AVX512ufull/SIMD512-2-config.h</h>
    </fragment>

    <fragment name="1600times2ARMV7A">
        <c>PlSnP/KeccakP-1600-times2/OptimizedAsmARM/KeccakP-1600-inplace-pl2-armv7a-neon-le-gcc.s</c>
        <h>PlSnP/KeccakP-1600-times2/OptimizedAsmARM/KeccakP-1600-times2-SnP.h</h>
    </fragment>

    <!-- Keccak-p[1600]Ã4 -->

    <fragment name="1600times4on1">
        <c>PlSnP/KeccakP-1600-times4/FallbackOn1/KeccakP-1600-times4-on1.c</c>
        <h>PlSnP/KeccakP-1600-times4/FallbackOn1/KeccakP-1600-times4-SnP.h</h>
        <h>PlSnP/Fallback/PlSnP-Fallback.inc</h>
    </fragment>

    <fragment name="1600times4on2">
        <c>PlSnP/KeccakP-1600-times4/FallbackOn2/KeccakP-1600-times4-on2.c</c>
        <h>PlSnP/KeccakP-1600-times4/FallbackOn2/KeccakP-1600-times4-SnP.h</h>
        <h>PlSnP/Fallback/PlSnP-Fallback.inc</h>
    </fragment>

    <fragment name="SIMD256">
        <c>PlSnP/KeccakP-1600-times4/SIMD256/KeccakP-1600-times4-SIMD256.c</c>
        <h>PlSnP/KeccakP-1600-times4/SIMD256/KeccakP-1600-times4-SnP.h</h>
        <h>SnP/KeccakP-1600/Optimized/KeccakP-1600-unrolling.macros</h>
    </fragment>

    <fragment name="SIMD256-AVX2u6" inherits="SIMD256">
        <h>PlSnP/KeccakP-1600-times4/SIMD256/AVX2u6/SIMD256-config.h</h>
    </fragment>

    <fragment name="SIMD256-AVX2u12" inherits="SIMD256">
        <h>PlSnP/KeccakP-1600-times4/SIMD256/AVX2u12/SIMD256-config.h</h>
    </fragment>

    <fragment name="SIMD256-AVX2ufull" inherits="SIMD256">
        <h>PlSnP/KeccakP-1600-times4/SIMD256/AVX2ufull/SIMD256-config.h</h>
    </fragment>

    <fragment name="SIMD512-4">
        <c>PlSnP/KeccakP-1600-times4/SIMD512/KeccakP-1600-times4-SIMD512.c</c>
        <h>PlSnP/KeccakP-1600-times4/SIMD512/KeccakP-1600-times4-SnP.h</h>
    </fragment>

    <fragment name="SIMD512-4-AVX512u4" inherits="SIMD512-4">
        <h>PlSnP/KeccakP-1600-times4/SIMD512/AVX512u4/SIMD512-4-config.h</h>
    </fragment>

    <fragment name="SIMD512-4-AVX512u12" inherits="SIMD512-4">
        <h>PlSnP/KeccakP-1600-times4/SIMD512/AVX512u12/SIMD512-4-config.h</h>
    </fragment>

    <fragment name="SIMD512-4-AVX512ufull" inherits="SIMD512-4">
        <h>PlSnP/KeccakP-1600-times4/SIMD512/AVX512ufull/SIMD512-4-config.h</h>
    </fragment>


    <!-- Keccak-p[1600]Ã8 -->

    <fragment name="1600times8on1">
        <c>PlSnP/KeccakP-1600-times8/FallbackOn1/KeccakP-1600-times8-on1.c</c>
        <h>PlSnP/KeccakP-1600-times8/FallbackOn1/KeccakP-1600-times8-SnP.h</h>
        <h>PlSnP/Fallback/PlSnP-Fallback.inc</h>
    </fragment>

    <fragment name="1600times8on2">
        <c>PlSnP/KeccakP-1600-times8/FallbackOn2/KeccakP-1600-times8-on2.c</c>
        <h>PlSnP/KeccakP-1600-times8/FallbackOn2/KeccakP-1600-times8-SnP.h</h>
        <h>PlSnP/Fallback/PlSnP-Fallback.inc</h>
    </fragment>

    <fragment name="1600times8on4">
        <c>PlSnP/KeccakP-1600-times8/FallbackOn4/KeccakP-1600-times8-on4.c</c>
        <h>PlSnP/KeccakP-1600-times8/FallbackOn4/KeccakP-1600-times8-SnP.h</h>
        <h>PlSnP/Fallback/PlSnP-Fallback.inc</h>
    </fragment>

    <fragment name="SIMD512-8">
        <c>PlSnP/KeccakP-1600-times8/SIMD512/KeccakP-1600-times8-SIMD512.c</c>
        <h>PlSnP/KeccakP-1600-times8/SIMD512/KeccakP-1600-times8-SnP.h</h>
    </fragment>

    <fragment name="SIMD512-8-AVX512u4" inherits="SIMD512-8">
        <h>PlSnP/KeccakP-1600-times8/SIMD512/AVX512u4/SIMD512-config.h</h>
    </fragment>

    <fragment name="SIMD512-8-AVX512u12" inherits="SIMD512-8">
        <h>PlSnP/KeccakP-1600-times8/SIMD512/AVX512u12/SIMD512-config.h</h>
    </fragment>

    <fragment name="SIMD512-8-AVX512ufull" inherits="SIMD512-8">
        <h>PlSnP/KeccakP-1600-times8/SIMD512/AVX512ufull/SIMD512-config.h</h>
    </fragment>

    <!-- *** High-level services *** -->

    <fragment name="keccak" inherits="common Ketje">
        <c>Constructions/KeccakSponge.c</c>
        <h>Constructions/KeccakSponge.inc</h>
        <h>Constructions/KeccakSponge.h</h>
        <c>Constructions/KeccakDuplex.c</c>
        <h>Constructions/KeccakDuplex.inc</h>
        <h>Constructions/KeccakDuplex.h</h>
        <c>Constructions/Kravatte.c</c>
        <h>Constructions/Kravatte.h</h>
        <c>Modes/SimpleFIPS202.c</c>
        <h>Modes/SimpleFIPS202.h</h>
        <c>Modes/KeccakHash.c</c>
        <h>Modes/KeccakHash.h</h>
        <c>Modes/Motorist.c</c>
        <h>Modes/Motorist.inc</h>
        <h>Modes/Motorist.h</h>
        <c>Modes/Keyakv2.c</c>
        <h>Modes/Keyakv2.inc</h>
        <h>Modes/Keyakv2.h</h>
        <c>Modes/KeccakPRG.c</c>
        <h>Modes/KeccakPRG.inc</h>
        <h>Modes/KeccakPRG.h</h>
        <c>Modes/KangarooTwelve.c</c>
        <h>Modes/KangarooTwelve.h</h>
        <c>Modes/KravatteModes.c</c>
        <h>Modes/KravatteModes.h</h>
        <c>Modes/SP800-185.c</c>
        <h>Modes/SP800-185.inc</h>
        <h>Modes/SP800-185.h</h>
        <h>Modes/Phases.h</h>
    </fragment>

    <!-- *** Utilities *** -->

    <!-- To run many tests -->
    <fragment name="KeccakTests" inherits="keccak">
        <c>Tests/main.c</c>
        <c>Tests/testSnP.c</c>
        <h>Tests/testSnP.inc</h>
        <h>Tests/testSnP.h</h>
        <c>Tests/testPlSnP.c</c>
        <h>Tests/testPlSnP.inc</h>
        <h>Tests/testPlSnP.h</h>
        <c>Tests/testSponge.c</c>
        <h>Tests/testSponge.inc</h>
        <h>Tests/testSponge.h</h>
        <c>Tests/testDuplex.c</c>
        <h>Tests/testDuplex.inc</h>
        <h>Tests/testDuplex.h</h>
        <c>Tests/testMotorist.c</c>
        <h>Tests/testMotorist.inc</h>
        <h>Tests/testMotorist.h</h>
        <c>Tests/testKeyakv2.c</c>
        <h>Tests/testKeyakv2.inc</h>
        <h>Tests/testKeyakv2.h</h>
        <c>Tests/testKetjev2.c</c>
        <h>Tests/testKetjev2.h</h>
        <h>Tests/testKetjev2.inc</h>
        <c>Tests/genKAT.c</c>
        <h>Tests/genKAT.h</h>
        <c>Tests/testPerformance.c</c>
        <h>Tests/timing.h</h>
        <h>Tests/testPerformance.h</h>
        <h>Tests/timingSnP.inc</h>
        <h>Tests/timingPlSnP.inc</h>
        <h>Tests/timingSponge.inc</h>
        <h>Tests/timingKeyak.inc</h>
        <c>Tests/testKeccakPRG.c</c>
        <h>Tests/testKeccakPRG.inc</h>
        <h>Tests/testKeccakPRG.h</h>
        <c>Tests/testKangarooTwelve.c</c>
        <h>Tests/testKangarooTwelve.h</h>
        <c>Tests/testKravatte.c</c>
        <h>Tests/testKravatte.h</h>
        <c>Tests/testKravatteModes.c</c>
        <h>Tests/testKravatteModes.h</h>
        <c>Tests/testSP800-185.c</c>
        <h>Tests/testSP800-185.h</h>
        <gcc>-lm</gcc>
    </fragment>

    <!-- To compute a hash of a file -->
    <fragment name="KeccakSum" inherits="keccak">
        <c>KeccakSum/KeccakSum.c</c>
        <c>KeccakSum/base64.c</c>
        <h>KeccakSum/base64.h</h>
    </fragment>

    <!-- To make a library -->
    <fragment name="libkeccak.a" inherits="keccak"/>

    <!-- *** CAESAR-related targets *** -->

    <fragment name="crypto_aead_test">
        <h>CAESAR/test_crypto_aead.h</h>
        <c>CAESAR/test_crypto_aead.c</c>
    </fragment>

    <!-- Keyak with CAESAR API and SUPERCOP packages -->

    <fragment name="Keyak" inherits="common">
        <c>Modes/Motorist.c</c>
        <h>Modes/Motorist.inc</h>
        <h>Modes/Motorist.h</h>
        <c>Modes/Keyakv2.c</c>
        <h>Modes/Keyakv2.inc</h>
        <h>Modes/Keyakv2.h</h>
    </fragment>

    <fragment name="crypto_aead/riverkeyakv2" inherits="Keyak">
        <c>CAESAR/RiverKeyak/encrypt.c</c>
        <h>CAESAR/RiverKeyak/api.h</h>
    </fragment>

    <fragment name="RiverKeyakSelfTest" inherits="crypto_aead/riverkeyakv2 crypto_aead_test">
        <c>CAESAR/RiverKeyak/selftest.c</c>
    </fragment>

    <fragment name="crypto_aead/lakekeyakv2" inherits="Keyak">
        <c>CAESAR/LakeKeyak/encrypt.c</c>
        <h>CAESAR/LakeKeyak/api.h</h>
    </fragment>

    <fragment name="LakeKeyakSelfTest" inherits="crypto_aead/lakekeyakv2 crypto_aead_test">
        <c>CAESAR/LakeKeyak/selftest.c</c>
    </fragment>

    <fragment name="crypto_aead/seakeyakv2" inherits="Keyak">
        <c>CAESAR/SeaKeyak/encrypt.c</c>
        <h>CAESAR/SeaKeyak/api.h</h>
    </fragment>

    <fragment name="SeaKeyakSelfTest" inherits="crypto_aead/seakeyakv2 crypto_aead_test">
        <c>CAESAR/SeaKeyak/selftest.c</c>
    </fragment>

    <fragment name="crypto_aead/oceankeyakv2" inherits="Keyak">
        <c>CAESAR/OceanKeyak/encrypt.c</c>
        <h>CAESAR/OceanKeyak/api.h</h>
    </fragment>

    <fragment name="OceanKeyakSelfTest" inherits="crypto_aead/oceankeyakv2 crypto_aead_test">
        <c>CAESAR/OceanKeyak/selftest.c</c>
    </fragment>

    <fragment name="crypto_aead/lunarkeyakv2" inherits="Keyak">
        <c>CAESAR/LunarKeyak/encrypt.c</c>
        <h>CAESAR/LunarKeyak/api.h</h>
    </fragment>

    <fragment name="LunarKeyakSelfTest" inherits="crypto_aead/lunarkeyakv2 crypto_aead_test">
        <c>CAESAR/LunarKeyak/selftest.c</c>
    </fragment>

    <!-- Target names are of the form x/y where x is taken from the first set and y from the second set. -->
    <group all="supercop">
        <product delimiter="/">
            <factor set="crypto_aead/riverkeyakv2 RiverKeyakSelfTest crypto_aead/lakekeyakv2 LakeKeyakSelfTest crypto_aead/seakeyakv2 SeaKeyakSelfTest crypto_aead/oceankeyakv2 OceanKeyakSelfTest crypto_aead/lunarkeyakv2 LunarKeyakSelfTest"/>
            <factor set="reference reference32bits compact generic32 generic32lc generic64 generic64lc asmX86-64 asmX86-64shld Nehalem SandyBridge Bulldozer Haswell KnightsLanding ARMv6M ARMv7M ARMv7A ARMv8A AVR8"/>
        </product>
    </group>

    <!-- *** Targets *** -->

    <fragment name="serial-fallbacks" inherits="800times2on1 800times4on1 800times8on1 1600times2on1 1600times4on1 1600times8on1"/>

    <!-- Reference implementations -->
    <fragment name="reference" inherits="reference200 reference400 reference800 reference1600 serial-fallbacks Ket-SnP">
        <c>Tests/displayIntermediateValues.c</c>
        <h>Tests/displayIntermediateValues.h</h>
        <define>KeccakReference</define>
        <gcc>-O</gcc>
    </fragment>

    <!-- Reference implementations dedicated to 32-bit platforms
        (i.e., featuring bit interleaving for Keccak-p[1600]) -->
    <fragment name="reference32bits" inherits="reference200 reference400 reference800 reference1600-32bits serial-fallbacks Ket-SnP">
        <c>Tests/displayIntermediateValues.c</c>
        <h>Tests/displayIntermediateValues.h</h>
        <define>KeccakReference</define>
        <define>KeccakReference32BI</define>
        <gcc>-O</gcc>
    </fragment>

    <!-- Compact implementations -->
    <fragment name="compact" inherits="compact200 reference400 compact800 compact1600 serial-fallbacks Ket-SnP"/>

    <!-- Generically optimized 32-bit implementations -->
    <fragment name="generic32" inherits="reference200 reference400 optimized800u2 inplace1600bi serial-fallbacks Ket-SnP"/>
    <!-- Generically optimized 32-bit implementations, featuring lane complementing -->
    <fragment name="generic32lc" inherits="reference200 reference400 optimized800lcu2 inplace1600bi serial-fallbacks Ket-SnP"/>

    <!-- Generically optimized 64-bit implementations -->
    <fragment name="generic64" inherits="reference200 reference400 optimized800ufull optimized1600ufull serial-fallbacks Ket-SnP"/>
    <!-- Generically optimized 64-bit implementations, featuring lane complementing -->
    <fragment name="generic64lc" inherits="reference200 reference400 optimized800lcufull optimized1600lcufull serial-fallbacks Ket-SnP"/>

    <!-- Assembler optimized 64-bit implementations -->
    <fragment name="asmX86-64" inherits="reference200 reference400 reference800 optimized1600AsmX86-64 serial-fallbacks Ket-SnP"/>
    <!-- Assembler optimized 64-bit implementations -->
    <fragment name="asmX86-64shld" inherits="reference200 reference400 reference800 optimized1600AsmX86-64shld serial-fallbacks Ket-SnP"/>

    <!-- Implementations selected for the Nehalem microarchitecture -->
    <fragment name="Nehalem" inherits="reference200 reference400 optimized800lcufull optimized1600lcufull 800times2on1 800times4on1 800times8on1 SIMD128-SSE2u2 1600times4on2 1600times8on2 Ket-SnP"/>
    <!-- Implementations selected for the Sandy Bridge microarchitecture -->
    <fragment name="SandyBridge" inherits="reference200 reference400 optimized800lcufull optimized1600lcufullshld 800times2on1 800times4on1 800times8on1 SIMD128-SSE2ufull 1600times4on2 1600times8on2 Ket-SnP"/>
    <!-- Implementations selected for the Bulldozer microarchitecture -->
    <fragment name="Bulldozer" inherits="reference200 reference400 optimized800lcufull optimized1600XOPufull 800times2on1 800times4on1 800times8on1 SIMD128-XOPufull 1600times4on2 1600times8on2 Ket-SnP"/>
    <!-- Implementations selected for the Haswell microarchitecture -->
    <fragment name="Haswell" inherits="reference200 reference400 optimized800lcufull optimized1600AVX2 800times2on1 800times4on1 800times8on1 SIMD128-SSE2u2 SIMD256-AVX2u12 1600times8on4 Ket-SnP"/>
    <!-- Implementations selected for the Knights Landing microarchitecture -->
    <fragment name="KnightsLanding" inherits="reference200 reference400 optimized800lcufull optimized1600AVX512 800times2on1 800times4on1 800times8on1 SIMD512-2-AVX512u12 SIMD512-4-AVX512u12 SIMD512-8-AVX512u12 Ket-SnP"/>

    <!-- Implementations selected for ARMv6M -->
    <fragment name="ARMv6M" inherits="optimized200ARMv6M optimized400ARMv6M optimized800ARMv6Mu2 optimized1600ARMv6Mu2 serial-fallbacks Ket-optimizedLE"/>
    <!-- Implementations selected for ARMv7M -->
    <fragment name="ARMv7M" inherits="optimized200ARMv7M optimized400ARMv7M optimized800ARMv7Mu2 inplace1600ARMv7M serial-fallbacks Ket-ARMv7M"/>
    <!-- Implementations selected for ARMv7A -->
    <fragment name="ARMv7A" inherits="reference200 reference400 optimized800ARMv7Au2 optimized1600ARMv7A 800times2on1 800times4ARMv7A 800times8on1 1600times2ARMV7A 1600times4on2 1600times8on2 Ket-optimizedLE"/>
    <!-- Implementations selected for ARMv8A -->
    <fragment name="ARMv8A" inherits="reference200 reference400 optimized800ARMv8A optimized1600ARMv8A serial-fallbacks Ket-optimizedLE"/>

    <!-- Implementations selected for 8-bit AVR -->
    <fragment name="AVR8" inherits="optimized200AVR8 optimized400AVR8 optimized800AVR8 optimized1600AVR8 serial-fallbacks Ket-SnP"/>

    <!-- Target names are of the form x/y where x is taken from the first set and y from the second set. -->
    <group all="Keccak">
        <product delimiter="/">
            <factor set="reference reference32bits compact generic32 generic32lc generic64 generic64lc asmX86-64 asmX86-64shld Nehalem SandyBridge Bulldozer Haswell KnightsLanding ARMv6M ARMv7M ARMv7A ARMv8A AVR8"/>
            <factor set="KeccakTests KeccakSum libkeccak.a"/>
        </product>
    </group>

</build>
